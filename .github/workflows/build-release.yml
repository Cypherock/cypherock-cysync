name: Build Final Release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: the branch to release from
        required: true

env:
  NODE_OPTIONS: '--max-old-space-size=8192'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  APP_NAME: '@cypherock/cysync-desktop'
  CHANNEL: 'latest'

jobs:
  integrity-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: 'recursive'
          fetch-depth: 0

      - name: Get tags
        run: git fetch --tags origin

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install linux dependencies
        run: sudo apt-get install fakeroot dpkg rpm -y

      - name: pnpm install
        run: pnpm install

      - name: Setup turbo cache
        env:
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          TURBO_API: ${{ secrets.TURBO_API }}
        run: node scripts/setupTurboCache.js

      - name: Build
        run: pnpm build

      - name: Pretty check
        run: pnpm pretty:check

      - name: Lint check
        run: pnpm lint:check

      - name: Test
        run: pnpm test

      - name: Setup git identity
        uses: fregante/setup-git-user@v2

      - name: Update versions
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: pnpm ci:version

      - name: Commit version changes
        run: |
          git add .
          git commit -m "chore: updated versions" ||
          echo "" # Ignore if no changes to commit

      - name: Push changes
        run: |
          git push origin ${{ inputs.ref }}

  build-linux:
    runs-on: ubuntu-latest
    needs: [integrity-check]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: 'recursive'

      - name: Get tags
        run: git fetch --tags origin

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install linux dependencies
        run: sudo apt-get install fakeroot dpkg rpm -y

      - name: pnpm install
        run: pnpm install

      - name: Setup turbo cache
        env:
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          TURBO_API: ${{ secrets.TURBO_API }}
        run: node scripts/setupTurboCache.js

      - name: Prebuild config
        run: node scripts/prebuild.js

      - name: Build
        run: pnpm make

      - uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: |
            apps/desktop/release/**/*.deb
            apps/desktop/release/**/*.AppImage
            apps/desktop/release/**/*.rpm
            apps/desktop/release/**/*.zip
            apps/desktop/release/**/*.snap
            apps/desktop/release/**/*.yml
            !apps/desktop/release/**/builder-debug.yml
          retention-days: 1

  build-win:
    runs-on: windows-latest
    needs: [integrity-check]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: 'recursive'

      - name: Get tags
        run: git fetch --tags origin

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Fix hashBang in pnpm.cjs
        run: pnpm fix:hashbang "C:\Users\runneradmin\setup-pnpm\node_modules\.pnpm\pnpm@$(pnpm --version)\node_modules\pnpm\bin\pnpm.cjs"

      - name: pnpm install
        run: pnpm install

      - name: Setup turbo cache
        env:
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          TURBO_API: ${{ secrets.TURBO_API }}
        run: node scripts/setupTurboCache.js

      - name: Prebuild config
        run: node scripts/prebuild.js

      - name: Windows Certificate Config
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'win-certificate.pfx'
          encodedString: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}

      - name: Build
        env:
          WINDOWS_PFX_FILE: ${{ steps.write_file.outputs.filePath }}
          WINDOWS_PFX_PASSWORD: ${{ secrets.WINDOWS_PFX_PASSWORD }}
        run: pnpm make

      - uses: actions/upload-artifact@v3
        with:
          name: build-win
          path: |
            apps/desktop/release/**/*.exe
            apps/desktop/release/**/*.yml
            !apps/desktop/release/**/builder-debug.yml
            !apps/desktop/release/**/win-unpacked/*
          retention-days: 1

  build-macos:
    runs-on: mac-m1
    needs: [integrity-check]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: 'recursive'

      - name: Get tags
        run: git fetch --tags origin

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: pnpm install
        run: pnpm install

      - name: Setup turbo cache
        env:
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
          TURBO_API: ${{ secrets.TURBO_API }}
        run: node scripts/setupTurboCache.js

      - name: Prebuild config
        run: node scripts/prebuild.js

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Build
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          # no hardlinks so dependencies are copied
          USE_HARD_LINKS: false
        run: |
          pnpm make

      - uses: actions/upload-artifact@v3
        with:
          name: build-macos
          path: |
            apps/desktop/release/**/*.dmg
            apps/desktop/release/**/*.zip
            apps/desktop/release/**/*.yml
            !apps/desktop/release/**/*.app/*
            !apps/desktop/release/**/builder-debug.yml
          retention-days: 1

  publish-build:
    runs-on: ubuntu-latest
    needs: [build-win, build-linux, build-macos]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: 'recursive'

      - name: Get tags
        run: git fetch --tags origin

      - name: Setup git identity
        uses: fregante/setup-git-user@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - uses: actions/download-artifact@v3

      - run: pnpm i --ignore-scripts

      - name: Prebuild config
        run: node scripts/prebuild.js

      - name: Publish release
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_UPLOAD_URL: ${{ secrets.AWS_S3_UPLOAD_URL }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: node scripts/postbuild.js "build-win,build-linux,build-macos"
