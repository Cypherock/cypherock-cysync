name: Build CI

on:
  push:
    tags:
      - '**'

env:
  NODE_OPTIONS: '--max-old-space-size=8192'

jobs:
  build-linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install linux dependencies
        run: sudo apt-get install fakeroot dpkg rpm -y

      - name: pnpm install
        run: pnpm install

      - name: Prebuild config
        run: node scripts/prebuild.js

      - name: Build
        run: pnpm make

      - uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: |
            apps/desktop/release/**/*.deb
            apps/desktop/release/**/*.rpm
            apps/desktop/release/**/*.zip
            apps/desktop/release/**/*.snap
            apps/desktop/release/**/*.yml
            !apps/desktop/release/**/builder-debug.yml
          retention-days: 1

  build-win:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: pnpm install
        run: pnpm install

      # - name: Windows Certificate Config
      #   id: write_file
      #   uses: timheuer/base64-to-file@v1
      #   with:
      #     fileName: 'win-certificate.pfx'
      #     encodedString: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}

      - name: Build
        # env:
        #   WINDOWS_PFX_FILE: ${{ steps.write_file.outputs.filePath }}
        #   WINDOWS_PFX_PASSWORD: ${{ secrets.WINDOWS_PFX_PASSWORD }}
        run: pnpm make

      - uses: actions/upload-artifact@v3
        with:
          name: build-win
          path: |
            apps/desktop/release/**/*.exe
            apps/desktop/release/**/*.yml
            !apps/desktop/release/**/builder-debug.yml
            !apps/desktop/release/**/win-unpacked/*
          retention-days: 1

  build-macos-intel:
    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: pnpm install
        run: pnpm install

      - name: Prebuild config
        run: node scripts/prebuild.js

      # - name: Install the Apple certificate and provisioning profile
      #   env:
      #     BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      #     P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      #     KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      #   run: |
      #     CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
      #     KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

      #     echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

      #     security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
      #     security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
      #     security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

      #     security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
      #     security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Build
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

        run: |
          pnpm make

      - uses: actions/upload-artifact@v3
        with:
          name: build-macos-intel
          path: |
            apps/desktop/release/**/*.dmg
            apps/desktop/release/**/*.zip
            apps/desktop/release/**/*.yml
            !apps/desktop/release/**/*.app/*
          retention-days: 1

  release-build:
    runs-on: ubuntu-latest
    needs: [build-win, build-linux, build-macos-intel]

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: next-8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - uses: actions/download-artifact@v3

      - run: pnpm i --ignore-scripts

      - run: node scripts/prebuild.js

      - run: node scripts/prebuild.js

      - name: Upload release files
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_UPLOAD_URL: ${{ secrets.AWS_S3_UPLOAD_URL }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/postbuild.js "build-win,build-linux,build-macos-intel"
